<script src="http://localhost:8080/application.js" type="text/javascript" charset="utf-8"></script>

<script type="text/javascript" charset="utf-8">

// Initialize the all-important game object, where all the card data and such
// is stored.
var GAME = {};
var HANDLE = "<%= @handle %>";
var SUITS = {"s": "Spades", "h": "Hearts", "c": "Clubs", "d": "Diamonds"};

$(document).ready(function() {

	// Hook up the push connection.
	var jug = new Juggernaut;
    jug.subscribe("<%= @match_id %>", function(data) {
        delegate(data);
    });
    jug.on("connect", function() {
        pub("register", {handle: HANDLE});
    });

	// Delegate events coming from the server depending on the type of action.
	var delegate = function(data) {
		data = JSON.parse(data);
		if (data.match)
			GAME = JSON.parse(data.match);
		switch (data.type) {
			case "message":
				kibbitz("<strong>" + data.sender + "</strong>: <span>" + data.content + "</span>");
				break;
			case "registered":
				logger("<code>" + data.player + "</code> has successfully registered.");
				break;
			case "start":
				logger("There are now four players and the game has begun. It is <code>" + GAME.current_player + "</code>'s turn to choose trump.");
				if (is_my_turn())
					prompt_to_choose_trump();
				break;
			case "part":
				logger("<code>" + data.player + "</code> has left the game.");
				break;
			case "trump_chosen":
				logger("<code>" + GAME.current_player + "</code> has chosen <strong>" + SUITS[GAME.trump] + "</strong>. Let the game begin!");
				refresh();
				// TODO: it randomly assigns pairs.
				// TODO: what happens when a player disconnects and reconnects in the middle of a game? don't break other earlier disconnect / reconnect behavior.
				// TODO: send message to other users saying which card has been played. Alert new current player that it's their turn.
				// TODO: show current trick in progress instead of writing chat messages.
				// TODO: what happens when a trick is finished? adjudicate the trick, update the scores, and set the current player.
				// TODO: what if a player changes his handle? Should be keyed to ids, not handles.
				break;
			case "card_played":
				var latest_play = GAME.current_trick[GAME.current_trick.length - 1];
				logger("<code>" + latest_play[0] + "</code> played <strong>" + latest_play[1] + "</strong>.");
				refresh();
		}
	};
	
	// Manage the chat window.
	var kibbitz = function(msg) {
		var current_length = $("#kibbitz li").size();
		if (current_length >= 6)
			$("#kibbitz li:eq(0)").remove();
		$("<li>").html(msg).appendTo($("#kibbitz"));
	};
	
	// Special messages from the server.
	var logger = function(msg) {
		kibbitz("<em>[msg]:</em> " + msg);
	}
	
	// Publish events and actions to the server.
	var pub = function(url, data) {
		$.post("/matches/" + url, Object.extend({id: "<%= @match_id %>"}, data));
	};
	
	// Send chat messages.
	message = function(content) {
		pub("message", {content: content, handle: HANDLE});
	};
	
	// Fire messages on ENTER key on input.
	$("#console input").keydown(function(e) {
		if (e.keyCode == "13") {
			message($(this).val());
			$(this).val("");
			return false;
		};
	});
	
	prompt_to_choose_trump = function() {
		draw_my_hand();
		alert("Please choose trump by double clicking the card from your strongest suit.");
	};
	
	prompt_to_play_card = function() {
		logger("<strong>YOUR TURN!</strong>");
	};
	
	draw_my_hand = function() {
		draw_hand(sorted(my_hand()));
	}

	my_hand = function() {
		return GAME.hands[HANDLE];
	};
	
	is_my_turn = function() {
		return HANDLE == GAME.current_player;
	};
	
	refresh = function() {
		if (is_my_turn())
			prompt_to_play_card();
		draw_my_hand();
	};
	
	// Remove me from the game when I close the window.
	$(window).unload(function () {
	  pub("part", {handle: HANDLE});
	});
	
	$(".card").live("dblclick", function() {
		if (GAME.trump == null) {
			pub("choose_trump", {card: $(this).attr("id")});
		} else {
			if (!is_my_turn()) {
				alert("You can't play a card because it's not your turn!");
			} else {
				pub("play_card", {handle: HANDLE, card: $(this).attr("id")});
			};
		};
	});
});

</script>

<div id="board">
	<div id="card_template" class="card" style="left:30em;top:0em;display:none;z-index:10">
	  <div class="front">
	    <div class="index"></div>
		<img class="face" src="" alt="" width="80" height="130" />
		<div class="spot"></div>
		<div class="ace"></div>
	  </div> 
	</div>
</div>

<div id="chat">
	<ul id="kibbitz">
	</ul>
	<div id="console">&gt;&gt; <input type="text"/></div>
</div>